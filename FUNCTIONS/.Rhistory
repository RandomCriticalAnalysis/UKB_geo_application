load("~/Dropbox/QBI/15_ABDEL_UKB_MAP/UKB_geo_application/DATA/Abdel_data.Rdata")
input=GBR_region
output="~/Dropbox/QBI/15_ABDEL_UKB_MAP/UKB_geo_application/DATA/Spatial_Autocor.Rdata"
# Keep only numerical data in input
input@data = input@data[ , which(sapply(input@data, is.numeric)) ]
# make neighbour list object
nb.GBR_dist.UKB.PCs <- poly2nb(input)
library(sp)
library(spdep)
# Keep only numerical data in input
input@data = input@data[ , which(sapply(input@data, is.numeric)) ]
# make neighbour list object
nb.GBR_dist.UKB.PCs <- poly2nb(input)
# make spatial weights object
sp_weights.GBR_dist.UKB.PCs <- nb2listw(nb.GBR_dist.UKB.PCs, style="B", zero.policy=TRUE)
B.GBR_dist.UKB.PCs <- as(sp_weights.GBR_dist.UKB.PCs, "symmetricMatrix")
# make spatial weights matrix
wm.GBR_dist.UKB.PCs <- nb2mat(nb.GBR_dist.UKB.PCs, style='B', zero.policy = TRUE)
# moran test
moran_test.all <- lapply(input@data, moran.mc, sp_weights.GBR_dist.UKB.PCs, nsim=10, zero.policy = TRUE, na.action=na.omit)
MoransResults.full <- t(simplify2array(moran_test.all))
MoransResults.stats <- as.data.frame(MoransResults.full[,1:3])
MoransResults.file <- t(do.call(rbind, lapply(MoransResults.stats, unlist)))
MoransResults.file
# Keep only numerical data in input
input@data = input@data[ , which(sapply(input@data, is.numeric)) ]
# make neighbour list object
nb <- poly2nb(input)
# make spatial weights object
sp_weights.GBR_dist.UKB.PCs <- nb2listw(nb, style="B", zero.policy=TRUE)
B.GBR_dist.UKB.PCs <- as(sp_weights.GBR_dist.UKB.PCs, "symmetricMatrix")
# make spatial weights matrix
wm.GBR_dist.UKB.PCs <- nb2mat(nb.GBR_dist.UKB.PCs, style='B', zero.policy = TRUE)
# moran test
moran_test.all <- lapply(input@data, moran.mc, sp_weights.GBR_dist.UKB.PCs, nsim=10, zero.policy = TRUE, na.action=na.omit)
MoransResults.full <- t(simplify2array(moran_test.all))
MoransResults.stats <- as.data.frame(MoransResults.full[,1:3])
MoransResults.file <- t(do.call(rbind, lapply(MoransResults.stats, unlist)))
library(sp)
library(spdep)
load("~/Dropbox/QBI/15_ABDEL_UKB_MAP/UKB_geo_application/DATA/Abdel_data.Rdata")
input=GBR_region
library(sp)
library(spdep)
# Keep only numerical data in input
input@data = input@data[ , which(sapply(input@data, is.numeric)) ]
# make neighbour list object
nb <- poly2nb(input)
# make spatial weights matrix
wm.GBR_dist.UKB.PCs <- nb2mat(nb.GBR_dist.UKB.PCs, style='B', zero.policy = TRUE)
# make spatial weights matrix
wm.GBR_dist.UKB.PCs <- nb2mat(nb, style='B', zero.policy = TRUE)
# moran test
moran_test.all <- lapply(input@data, moran.mc, sp_weights.GBR_dist.UKB.PCs, nsim=10, zero.policy = TRUE, na.action=na.omit)
# Keep only numerical data in input
input@data = input@data[ , which(sapply(input@data, is.numeric)) ]
# make neighbour list object
nb <- poly2nb(input)
# make spatial weights object
sp_weights.GBR_dist.UKB.PCs <- nb2listw(nb, style="B", zero.policy=TRUE)
# moran test
moran_test.all <- lapply(input@data, moran.mc, sp_weights.GBR_dist.UKB.PCs, nsim=10, zero.policy = TRUE, na.action=na.omit)
MoransResults.full <- t(simplify2array(moran_test.all))
MoransResults.stats <- as.data.frame(MoransResults.full[,1:3])
MoransResults.file <- t(do.call(rbind, lapply(MoransResults.stats, unlist)))
# Keep only numerical data in input
input@data = input@data[ , which(sapply(input@data, is.numeric)) ]
# make neighbour list object
nb <- poly2nb(input)
# make spatial weights object
sp_weights <- nb2listw(nb, style="B", zero.policy=TRUE)
# moran test
moran_test.all <- lapply(input@data, moran.mc, sp_weights, nsim=10, zero.policy = TRUE, na.action=na.omit)
MoransResults.full <- t(simplify2array(moran_test.all))
MoransResults.stats <- as.data.frame(MoransResults.full[,1:3])
MoransResults.file <- t(do.call(rbind, lapply(MoransResults.stats, unlist)))
lapply(input@data, moran.mc, sp_weights, nsim=10, zero.policy = TRUE, na.action=na.omit)
lapply(input@data, moran.mc, sp_weights, nsim=10, zero.policy = TRUE, na.action=na.omit) %>% simplify2array()
library(dplyr)
lapply(input@data, moran.mc, sp_weights, nsim=10, zero.policy = TRUE, na.action=na.omit) %>% simplify2array()
lapply(input@data, moran.mc, sp_weights, nsim=10, zero.policy = TRUE, na.action=na.omit) %>% simplify2array() %>% t()
lapply(input@data, moran.mc, sp_weights, nsim=10, zero.policy = TRUE, na.action=na.omit) %>% simplify2array() %>% t() %>% select(1:3)
